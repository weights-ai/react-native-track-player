"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4993],{3905:function(e,r,t){t.d(r,{Zo:function(){return p},kt:function(){return f}});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var d=n.createContext({}),l=function(e){var r=n.useContext(d),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},p=function(e){var r=l(e.components);return n.createElement(d.Provider,{value:r},e.children)},c={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},u=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,i=e.originalType,d=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(t),f=o,m=u["".concat(d,".").concat(f)]||u[f]||c[f]||i;return t?n.createElement(m,a(a({ref:r},p),{},{components:t})):n.createElement(m,a({ref:r},p))}));function f(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=u;var s={};for(var d in r)hasOwnProperty.call(r,d)&&(s[d]=r[d]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=t[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},9639:function(e,r,t){t.r(r),t.d(r,{assets:function(){return p},contentTitle:function(){return d},default:function(){return f},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return c}});var n=t(7462),o=t(3366),i=(t(7294),t(3905)),a=["components"],s={sidebar_position:6},d="Build Preferences",l={unversionedId:"basics/build-preferences",id:"version-2.1/basics/build-preferences",title:"Build Preferences",description:"You can optionally configure a few options for how the Track Player module is built in your app. Add a JSON file named track-player.json to the root folder of your app (the same folder where index.android.js and node_modules are stored) and set one or more of the following properties:",source:"@site/versioned_docs/version-2.1/basics/build-preferences.md",sourceDirName:"basics",slug:"/basics/build-preferences",permalink:"/docs/2.1/basics/build-preferences",editUrl:"https://github.com/doublesymmetry/react-native-track-player/tree/main/docs/versioned_docs/version-2.1/basics/build-preferences.md",tags:[],version:"2.1",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"app",previous:{title:"Platform Support",permalink:"/docs/2.1/basics/platform-support"},next:{title:"Events",permalink:"/docs/2.1/api/events"}},p={},c=[{value:"<code>dash</code> (Android)",id:"dash-android",level:2},{value:"<code>hls</code> (Android)",id:"hls-android",level:2},{value:"<code>smoothstreaming</code> (Android)",id:"smoothstreaming-android",level:2}],u={toc:c};function f(e){var r=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"build-preferences"},"Build Preferences"),(0,i.kt)("p",null,"You can optionally configure a few options for how the Track Player module is built in your app. Add a JSON file named ",(0,i.kt)("inlineCode",{parentName:"p"},"track-player.json")," to the root folder of your app (the same folder where ",(0,i.kt)("inlineCode",{parentName:"p"},"index.android.js")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"node_modules")," are stored) and set one or more of the following properties:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "dash": false,\n  "hls": false,\n  "smoothstreaming": false\n}\n')),(0,i.kt)("h2",{id:"dash-android"},(0,i.kt)("inlineCode",{parentName:"h2"},"dash")," (Android)"),(0,i.kt)("p",null,"Whether it will add support for ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Dynamic_Adaptive_Streaming_over_HTTP"},"DASH")," streams. This option adds an extension for handling DASH streams, which changes the app size. Defaults to ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,i.kt)("h2",{id:"hls-android"},(0,i.kt)("inlineCode",{parentName:"h2"},"hls")," (Android)"),(0,i.kt)("p",null,"Whether it will add support for ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Adaptive_bitrate_streaming#Microsoft_Smooth_Streaming"},"Smooth Streaming")," streams. This option adds an extension for handling SmoothStreaming streams, which changes the app size. Defaults to ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,i.kt)("h2",{id:"smoothstreaming-android"},(0,i.kt)("inlineCode",{parentName:"h2"},"smoothstreaming")," (Android)"),(0,i.kt)("p",null,"Whether it will add support for SmoothStreaming streams. This option adds an extension for handling SmoothStreaming streams, which changes the app size."))}f.isMDXComponent=!0}}]);